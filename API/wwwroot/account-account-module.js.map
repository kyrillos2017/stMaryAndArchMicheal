{"version":3,"sources":["./src/app/account/components/login/login.component.ts","./src/app/account/components/login/login.component.html","./src/app/account/account.module.ts","./src/app/account/account-routing.module.ts"],"names":[],"mappings":"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","file":"account-account-module.js","sourcesContent":["import { Component, OnInit, Injector } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport { BusyService } from './../../../core/services/busy.service';\r\nimport { ToastrsService } from 'src/app/core/services/toastrs.service';\r\nimport { ToastrMessages } from 'src/app/shared/enums/enums';\r\nimport { BaseComponent } from 'src/app/shared/components/base/base.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent extends BaseComponent implements OnInit {\r\n  loginForm: FormGroup\r\n  returnUrl: string\r\n  submitted: boolean = false;\r\n  constructor(\r\n    injector: Injector,\r\n    private formBuilder: FormBuilder,\r\n    private _account: AccountService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private _bussy: BusyService,\r\n    private _toastr: ToastrsService\r\n  ) {\r\n    super(injector)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl || '/dashboard'\r\n    this.loginFormInit()\r\n  }\r\n  loginFormInit() {\r\n    this.loginForm = this.formBuilder.group(\r\n      {\r\n        email: [null, [Validators.required, Validators.email]],\r\n        password: [null, [Validators.required, Validators.minLength(6)]]\r\n      }\r\n    )\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true\r\n    let er = this.loginForm.get('password')?.hasError('minlength')\r\n\r\n    if (!this.loginForm.valid) {\r\n      this.submitted = false;\r\n      return };\r\n    this._account.login(this.loginForm.value).subscribe((res) => {\r\n      this.router.navigateByUrl(this.returnUrl)\r\n    }, err => {\r\n      this._toastr.addSingle(ToastrMessages.error, 'حدث خطأ ما', 'بريد إلكتروني أو كلمة مرور خاطئة')\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"w-100 h-100 bg-light d-flex justify-content-center align-items-center\">\r\n  <main class=\"form-signin\">\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" dir=\"rtl\">\r\n      <div class=\"text-center\">\r\n        <img class=\"mb-4 mx-auto\" src=\"/assets/images/logos/head-title-logo.png\" alt=\"\" width=\"auto\" height=\"auto\">\r\n      </div>\r\n\r\n      <mat-form-field appearance=\"legacy\" class=\"w-100 text-right\">\r\n        <mat-label>البريد الإلكتروني</mat-label>\r\n        <input formControlName=\"email\" matInput type=\"email\" placeholder=\"البريد الإلكتروني\">\r\n\r\n        <mat-error *ngFor=\"let validation of validation_messages\">\r\n          <mat-error class=\"error-message\"\r\n            *ngIf=\"loginForm?.get('email')?.hasError(validation.type) && (loginForm?.get('email')?.dirty || loginForm?.get('email')?.touched || submitted)\">\r\n            البريد الإلكتروني {{validation.message}}</mat-error>\r\n\r\n\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n\r\n      <mat-form-field appearance=\"legacy\" class=\"w-100 text-right\">\r\n        <mat-label>كلمة المرور</mat-label>\r\n        <input formControlName=\"password\" matInput type=\"password\" placeholder=\"كلمة المرور\">\r\n\r\n        <mat-error *ngFor=\"let validation of validation_messages\">\r\n\r\n          <mat-error class=\"error-message\"\r\n            *ngIf=\"loginForm?.get('password')?.hasError(validation.type) && !loginForm?.get('password')?.hasError('minlength') && (loginForm?.get('password')?.dirty || loginForm?.get('password')?.touched || submitted)\">\r\n            كلمة المرور {{validation.message}}</mat-error>\r\n\r\n          <mat-error class=\"error-message\"\r\n            *ngIf=\"loginForm?.get('password')?.hasError(validation.type) && loginForm?.get('password')?.hasError('minlength') && (loginForm?.get('password')?.dirty || loginForm?.get('password')?.touched || submitted)\">\r\n            كلمة المرور {{validation.message}} {{loginForm?.get('password')?.errors?.minlength?.requiredLength}}\r\n          </mat-error>\r\n        </mat-error>\r\n\r\n      </mat-form-field>\r\n\r\n      <button mat-flat-button color=\"primary\" class=\"w-100 mt-3\">تسجيل الدخول</button>\r\n    </form>\r\n  </main>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AccountRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}